name: Papyri-lab Build

on:
  push:
    branches: main
  pull_request:
    branches: '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Base Setup
      uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

    - name: Install dependencies
      run: python -m pip install -U "jupyterlab>=4.0.0,<5"

    - name: Lint the extension
      run: |
        set -eux
        cd papyri-lab
        jlpm
        jlpm run lint:check

    - name: Test the extension
      run: |
        set -eux
        cd papyri-lab
        jlpm run test

    - name: Build the extension
      run: |
        set -eux
        # install papyri first, then do the extension
        pip install -e .
        pip install scipy
        papyri build-parser
        papyri gen examples/papyri.toml
        papyri ingest ~/.papyri/data/*
        echo 'CD to extension'
        cd papyri-lab
        python -m pip install .[test]

        pytest -vv -r ap --cov papyri_lab
        jupyter server extension list
        jupyter server extension list 2>&1 | grep -ie "papyri_lab.*OK"

        jupyter labextension list
        jupyter labextension list 2>&1 | grep -ie "papyri-lab.*OK"
        python -m jupyterlab.browser_check

    - name: Package the extension
      run: |
        set -eux
        cd papyri-lab

        pip install build
        python -m build
        pip uninstall -y "papyri_lab" jupyterlab

    - name: Upload extension packages
      uses: actions/upload-artifact@v3
      with:
        name: extension-artifacts
        path: papyri-lab/dist/papyri_lab*
        if-no-files-found: error

  test_isolated:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        architecture: 'x64'

    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install papyri
      run: |
        set -eux
        # install papyri first, then do the extension
        pip install -e .
        pip install scipy
        papyri build-parser

    - uses: actions/download-artifact@v3
      with:
        name: extension-artifacts

    - name: Install and Test
      run: |
        set -eux
        # Remove NodeJS, twice to take care of system and locally installed node versions.
        sudo rm -rf $(which node)
        sudo rm -rf $(which node)

        pip install "jupyterlab>=4.0.0,<5" papyri_lab*.whl


        jupyter server extension list
        jupyter server extension list 2>&1 | grep -ie "papyri_lab.*OK"

        jupyter labextension list
        jupyter labextension list 2>&1 | grep -ie "papyri-lab.*OK"
        python -m jupyterlab.browser_check --no-browser-test

  integration-tests:
    name: Integration tests
    needs: build
    runs-on: ubuntu-latest

    env:
      PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/pw-browsers

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Base Setup
      uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

    - name: Install papyri
      run: |
        set -eux
        # install papyri first, then do the extension
        pip install -e .
        pip install scipy
        papyri build-parser

    - name: Download extension package
      uses: actions/download-artifact@v3
      with:
        name: extension-artifacts

    - name: Install the extension
      run: |
        set -eux
        python -m pip install "jupyterlab>=4.0.0,<5" papyri_lab*.whl

    - name: Install dependencies
      working-directory: papyri-lab/ui-tests
      env:
        YARN_ENABLE_IMMUTABLE_INSTALLS: 0
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
      run:
        jlpm install

    - name: Set up browser cache
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/pw-browsers
        key: ${{ runner.os }}-${{ hashFiles('ui-tests/yarn.lock') }}

    - name: Install browser
      run: |
        jlpm playwright install chromium
      working-directory: papyri-lab/ui-tests

    - name: Execute integration tests
      working-directory: papyri-lab/ui-tests
      run: |
        jlpm playwright test

    - name: Upload Playwright Test report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: papyri_lab-playwright-tests
        path: |
          papyri-lab/ui-tests/test-results
          papyri-lab/ui-tests/playwright-report
