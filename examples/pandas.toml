[global]
module = 'pandas'
logo = 'img/logo_pandas.png'
exec_failure = "fallback"
submodules = []
exclude = [""
]
execute_doctests = false
[pandas.expected_errors]
IncorrectInternalDocsLen = [
   "pandas.core.indexes.period:PeriodIndex.asof_locs",
   "pandas.core.indexes.range:RangeIndex._extended_gcd",
   "pandas.core.missing:_rolling_window",
   "pandas.io.html:_HtmlFrameParser",
   "pandas.io.stata:_dtype_to_default_stata_fmt",
   "pandas.io.pytables:Selection.generate",
   "pandas.core.internals.managers:BaseBlockManager.take",
]
NumpydocParseError = [
   "pandas._config.config:CallableDynamicDoc",
   "pandas._libs.properties:AxisProperty",
   "pandas._libs.properties:CachedProperty",
   "pandas.core.arraylike:array_ufunc",
   "pandas.core.arraylike:array_ufunc",
   "pandas.core.generic:NDFrame.isna",
   "pandas.core.generic:NDFrame.isnull",
   "pandas.core.generic:NDFrame.notna",
   "pandas.core.generic:NDFrame.notnull",
   "pandas.core.generic:NDFrame.replace",
   "pandas.core.generic:NDFrame.set_axis",
   "pandas.io.pytables:Table",
]
AssertionError = [
 "pandas.core.apply:_make_unique_kwarg_list",
 "pandas.core.apply:relabel_result",
]
ValueError = [
    "pandas.io.gbq:read_gbq",
]
WrongTypeAtField = [
   "pandas.io.gbq:read_gbq",
   "pandas.io.pickle:to_pickle",
   "pandas.core.frame:DataFrame.to_gbq",
   "pandas.core.resample:Resampler.interpolate",
   "pandas.core.generic:NDFrame.to_pickle",
]

[global.implied_imports]
pd = 'pandas'
