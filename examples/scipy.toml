[scipy]
logo = "../scipy_logo.png"
submodules = [ "signal",]
exclude = [ "scipy.signal.spectral._spectral_helper",
            "scipy.optimize._lsq.least_squares.least_squares",
            "scipy.signal.signaltools.correlation_lags",
            "scipy.linalg",
            "scipy.special.orthogonal.roots_chebyc",
            "scipy.special.orthogonal.roots_gegenbauer",
            # not implemented substitution reference
            "scipy.optimize.nonlin.TerminationCondition",
            "scipy.sparse.linalg._expm_multiply.LazyOperatorNormInfo.d",
            # directive with space
            "scipy.spatial.transform.rotation.Rotation",
            # citation not implemented
            "scipy.optimize.zeros.toms748",
            "scipy.optimize.nonlin.nonlin_solve",
            "scipy.special.orthogonal._roots_hermite_asy",
            "scipy.spatial.qhull.ConvexHull",
            "scipy.spatial.qhull.HalfspaceIntersection",
            # not implemented citation_reference
            "scipy.optimize.nonlin.anderson",
            "scipy.optimize.zeros.brentq",
            "scipy.special.orthogonal.roots_chebys",
            "scipy.special.orthogonal.roots_sh_chebyu",
            "scipy.special.orthogonal.roots_sh_chebyt",
            "scipy.special.orthogonal.roots_chebyu",
            "scipy.special.orthogonal.roots_chebyt",
            "scipy.optimize._lsq.lsq_linear.lsq_linear",
            "scipy.optimize._lsq.trf",
            "scipy.optimize._lsq.dogbox",
            "scipy.special._basic.zeta",
            "scipy.spatial._spherical_voronoi.calculate_solid_angles",
            'scipy.optimize.zeros.ridder',
            'scipy.special.orthogonal.roots_hermite',
            'scipy.special.orthogonal.roots_hermitenorm',
            'scipy.special.orthogonal.roots_jacobi',
            'scipy.special.orthogonal.roots_sh_jacobi',
            'scipy.special.orthogonal.roots_laguerre',
            'scipy.special.orthogonal.roots_genlaguerre',
            'scipy.special.orthogonal',
            'scipy.special.orthogonal.roots_legendre',
            'scipy.signal.lti_conversion.tf2ss',
            'scipy.special._basic.polygamma',
            'scipy.special.orthogonal.roots_sh_legendre',
            'scipy.optimize.nonlin.Anderson',
            'scipy.special.orthogonal._pbcf',
            'scipy.spatial._spherical_voronoi.SphericalVoronoi',
            # not implemented visit target
            "scipy.interpolate.fitpack2.SmoothSphereBivariateSpline",
            "scipy.interpolate.fitpack2.RectSphereBivariateSpline",
            "scipy.interpolate.interpnd.CloughTocher2DInterpolator",
            "scipy.interpolate.fitpack2.LSQSphereBivariateSpline",
            # not implemented .. comment
            "scipy.linalg.interpolative.interp_decomp",
            "scipy.linalg.interpolative.estimate_rank",
            "scipy.linalg.interpolative.estimate_spectral_norm",
            "scipy.linalg.interpolative.estimate_spectral_norm_diff",
            "scipy.linalg.interpolative.id_to_svd",
            "scipy.linalg.interpolative.reconstruct_interp_matrix",
            "scipy.linalg.interpolative.reconstruct_matrix_from_id",
            "scipy.linalg.interpolative.reconstruct_skel_matrix",
            "scipy.linalg.interpolative.svd",
            #serialisation issue
            "scipy.signal.wavelets.cwt",
            "scipy.linalg.basic.pinv",
            "scipy.integrate.odepack.odeint",
            "scipy.spatial.distance.pdist",
            "scipy.spatial.kdtree.KDTree.query_ball_point",
            "scipy.interpolate.interpolate._PPolyBase.extend",
            "scipy.spatial.distance.cdist",
            "scipy.optimize._lsq.common.CL_scaling_vector",
            "scipy.optimize._trustregion.BaseQuadraticSubproblem.get_boundaries_intersections",
            "scipy.optimize.nonlin.newton_krylov",
            "scipy.linalg.basic.pinvh",
            "scipy.linalg._decomp_update.qr_insert",
            "scipy.optimize._linprog_ip._ip_hsd",
            "scipy.optimize.nonlin.KrylovJacobian",
            "scipy.special.orthogonal._compute_tauk",
            "scipy.interpolate.interpolate.BPoly.extend",
            "scipy.spatial.qhull.Delaunay",
            "scipy.spatial.qhull.Voronoi",
            # issue in parsing examples section that gets directive as output w/o
            # body.
            "scipy.signal.lti_conversion.ss2tf",
            "scipy.interpolate.interpolate.interp1d",
            "scipy.optimize._linprog.linprog",
            "scipy.interpolate.interpolate.BPoly",
             "scipy.interpolate.interpolate.lagrange",
            "scipy.sparse.csgraph._traversal.breadth_first_tree",
            "scipy.sparse.csgraph._traversal.depth_first_tree",
            "scipy.sparse.csgraph._min_spanning_tree.minimum_spanning_tree",
            # ts parse error
            'scipy.optimize.optimize.fmin',
            'scipy.optimize.optimize.fmin_powell',
            'scipy.integrate.quadpack.quad',
            "scipy.optimize.optimize._minimize_scalar_bounded",
            "scipy.optimize.optimize._line_for_search",
            "scipy.optimize.optimize.fmin_bfgs",
            "scipy.optimize.optimize.fminbound",
            "scipy.fft._pocketfft.pypocketfft.PyCapsule.c2c",
            "scipy.fft._pocketfft.pypocketfft.PyCapsule.c2r",
            "scipy.fft._pocketfft.pypocketfft.PyCapsule.dct",
            "scipy.fft._pocketfft.pypocketfft.PyCapsule.dst",
            "scipy.fft._pocketfft.pypocketfft.PyCapsule.genuine_hartley",
            "scipy.fft._pocketfft.pypocketfft.PyCapsule.r2c",
            "scipy.fft._pocketfft.pypocketfft.PyCapsule.r2r_fftpack",
            "scipy.fft._pocketfft.pypocketfft.PyCapsule.separable_hartley",
            "scipy.sparse.linalg.isolve.iterative.bicg",
            "scipy.sparse.linalg.isolve.iterative.bicgstab",
            "scipy.sparse.linalg.isolve.iterative.cg",
            "scipy.sparse.linalg.isolve.iterative.cgs",
            'scipy.sparse.linalg.isolve.minres.minres',
            'scipy.sparse.linalg.isolve.iterative.qmr',

            # ts difference parse
            'scipy.sparse.linalg.isolve.iterative.gmres',

            # not numpydoc format
            # See https://github.com/scipy/scipy/pull/15034
            'scipy.sparse.linalg.dsolve._superlu.gstrf', 
            # numpydoc parse error
            "scipy.optimize._linprog_doc._linprog_highs_doc",
            "scipy.optimize._linprog_doc._linprog_highs_ds_doc",
            "scipy.optimize._linprog_doc._linprog_highs_ipm_doc",
            "scipy.optimize._linprog_ip._linprog_ip",
            "scipy.optimize._linprog_doc._linprog_ip_doc",
            "scipy.optimize._linprog_rs._linprog_rs",
            "scipy.optimize._linprog_doc._linprog_rs_doc",
            "scipy.optimize._linprog_simplex._linprog_simplex",
            "scipy.optimize._linprog_doc._linprog_simplex_doc",
            "scipy.optimize._qap._quadratic_assignment_2opt",
            "scipy.optimize._qap._quadratic_assignment_faq",
            "scipy.optimize._linprog_highs._linprog_highs",
            #"ExecError-<class 'ValueError'>": [
            "scipy.signal.signaltools.resample_poly",
            "scipy.optimize.optimize.bracket",
            "scipy.spatial.transform._rotation_spline.RotationSpline"
            ]
exclude_jedi = [ "scipy.linalg._sketches.clarkson_woodruff_transform", "scipy.optimize._lsq.least_squares.least_squares",]
execute_exclude_patterns = []
exec_failure = "fallback"
