{% extends "base.tpl.j2" %}

{% block plus %}
    {%- for section in doc.content.keys() if doc.content[section] and len(doc.content[section]) -%}
    {%- if section not in ['Extended Summary','Signature', 'Summary'] -%}
    <a href="#section-{{section}}">{{section}}</a>

    {%  endif -%}
    {%  endfor -%}
    {%- if backrefs[0] or backrefs[1] -%}
        <a href="#section-backrefs">BackRef</a>
    {%  endif %}
{% endblock %}

{%block api %}

{%- macro example(entries) -%}
<span class='nsl'>{{'>>> ' -}}</span>{{ '' -}}
    {%- for text, t_, cc in entries %}
        {%- if text == '\n' -%}
            <br><span class='nsl'>...&nbsp;</span>
        {%- else -%}
            {%- if t_ -%}
            <a class="foo {{cc}}" title={{t_}}, href="{{t_}}{{ext}}">{{text}}</a>
            {%- else -%}
            <span class="{{cc}}">{{text}}</span>
            {%- endif -%}
        {%- endif -%}
    {%- endfor-%}
    {{-'\n'}}
{%- endmacro %}


{% macro render_inner(type_, obj) -%}
    {%- if type_ == 'Words' -%}
        {{-obj.value-}}
    {%- elif type_ == 'Word' -%}
        {{-obj.value-}}
    {%- elif type_ == 'Directive' -%}
        <code>:{{obj.domain}}:{{obj.role}}:`{{obj.text}}`</code>
    {%- elif type_ == 'Link' -%}
        {# Links have : value, reference, kind exists#}
        {%- if obj.reference.kind=='local' -%}
            <code><a link href="#{{obj.reference.path}}" class='{{obj.kind}}'>{{obj.value}}</a></code>
        {%- elif obj.kind in ('exists', ) -%}
            <code><a link href="{{url(obj.reference)}}{{ext}}" class='{{obj.kind}}'>{{obj.value}}</a></code>
        {% else %}
            {{unreachable(obj.__dict__)}}
        {%- endif -%}
    {% elif type_ == 'Math' %}
        <span class="tex2jax_process">${{obj.text}}$</span>
    {% elif type_ == 'Verbatim' %}
        <code class='verbatim'>{{obj.text}}</code>
    {% else %}
        <code>Some B |{{type_}}|</code>
        {{unreachable(obj)}}
    {%- endif -%}
{%- endmacro %}

{% macro render_paragraph(prgs) -%}
{% for prg in prgs %}
   {% if not prg.__class__.__name__ ==  'Paragraph' %}
   {{ unreachable('Not a Paragraph', prg) }}
   {% endif %}
        <p>
            {%- for obj in prg.children -%}
                {{- render_inner(obj.__class__.__name__, obj) -}} 
            {%- endfor -%}
        </p>
    {%- endfor %}
{%- endmacro %}


{%- macro lines(self) -%}{%- for x in self %}
{{x.text}}
{%- endfor -%}
{%- endmacro %}



{% macro block(self) -%}
{{-lines(self.lines)}}
{%- if self.wh -%}
{{lines(self.wh)}}
{%- endif -%}
{%- if self.ind -%}
    {{-lines(self.ind)-}}
{%- endif -%}
{%- endmacro %}

{% macro block_directive(dve) -%}
<div class='block_directive'>
    <div class='head'>.. {{dve.directive_name}}:: {{dve.args0}}</div>
    {% if dve.inner %}
        {{block_paragraph(dve.inner)}}
    {% endif %}
</div>
{% endmacro %}



{% macro block_paragraph(pgr) -%}
<p >
{%- for c in pgr.children -%}
    {{-render_inner(c.__class__.__name__, c)-}}
{%- endfor -%}
</p>
{% endmacro %}



{% macro render_II(obj) -%}
    {% if obj.__class__.__name__ == 'Paragraph' %}
        {{block_paragraph(obj)}}
    {% else %}
       {%- set type = obj.__class__.__name__ -%}
       {%- if type in ('Word', 'Directive', 'Link', 'Math', 'Verbatim','Words') -%}
            {{unreachable()}}
       {%- elif type == 'Directive' -%}
           {{unreachable()}}
       {% elif type == 'Math' %}
           {{unreachable()}}
       {% elif type == 'BlockDirective' %}
            {{block_directive(obj)}}
       {% elif type == 'Verbatim' %}
           {{unreachable()}}
       {% elif type == 'Paragraph' %}
        {{block_paragraph(obj)}}
       {% elif type == 'BlockVerbatim' %}
            <pre>
           {%- for l in obj.lines.dedented() -%}
{{-l.text}}{% if not loop.last %}{{-'\n'-}}{%- endif -%}
           {%- endfor -%}</pre>
       {% elif type == 'Block' %}
           {{block(obj)}}
           {{unreachable(obj)}}
       {% elif type == 'DefList' %}
          <!-- deflist -->
           <dl>
               {% for item in obj.children %}
               <dt>{{render_II(item.dt)}}<dt>
               <dd>{{render_II(item.dd)}}<dd>
               {%endfor %}  
           </dl>
       {% elif type == 'DefListItem' %}
           <pre>DEFLIST ITEM
           {{-block(obj)-}}
           </pre>
       {% elif type == 'Example' %}
           <pre>{{block(obj)-}}</pre>
       {% elif type == 'Section' %}
           {% for item in obj %}
               {{ render_II(item) }}
           {% endfor %}
       {% else %}
           <code>Some A {{type}} Not implemented yet</code>
           {{unreachable(type, obj)}}
           {%- for l in obj.lines -%}
{{l._line}}{% if not loop.last %}{{-'\n'-}}{% endif %}
           {%- endfor -%}</pre><pre>
            {%- for l in obj.ind -%}
{{l._line}}{% if not loop.last %}{{-'\n'-}}{% endif %}
           {%- endfor -%}</pre>
       {%- endif -%}
    {%- endif %}
{%- endmacro %}

{% macro ref(r) -%}
    {% if r.exists %}
                <a href="{{r.ref}}{{ext}}" class='exists'>{{r.name}}</a>
    {% else %}
                <b class='missing'>{{r.name}}</b>
    {% endif %}
{%- endmacro %}



{% for section in doc.content.keys() if doc.content[section] %}

    {% if (section not in ['Extended Summary','Signature', 'Summary']) and len(doc.content[section]) > 0 %}
        <h3 id="section-{{section}}">{{section}}</h3>
    {% endif %}
    {% if section in ['Extended Summary', 'Summary',  'Notes'] %}
        <!-- rendering {{section}} -->
        {{render_II(doc.content[section])}}
    {% elif section in ['Signature'] %}
       <code class='signature'>{{doc.content[section]}}</code>
    {% elif section in ['See Also'] %}
        {% for sa in doc.see_also %}
            <dl>
                <dt><a>{{ref(sa.name)}}</a></dt>
                <!-- This See also will be incorrect as the SeeAlsoItems are improperly deserialised. -->
                <dd>{{render_paragraph(sa.descriptions)}}</dd>
            </dl>
        {% endfor %}

    {% elif section in ['Examples'] %}
        {% for data in doc.example_section_data %}
            {%- set type = data.__class__.__name__ -%}
            {% if type=='Text' %}
                {{render_paragraph(data)}}
            {% elif type == 'Fig' %}
                <div><img src="img/{{module}}/assets/{{data.value}}"/></div>
            {% elif type == 'Code' %}
                {% if data.ce_status == 'syntax_error' -%}
                    <span class='warning'>This example raised an error at execution time but compiled correctly</span>
                {%-elif data.ce_status == 'exception_in_exec' -%}
                    <span class='warning'>This example is valid syntax, but raise an exception at execution</span>
                {%-elif data.ce_status == 'compiled' -%}
                    <span class='note'>This example is valid syntax, but we were not able to check execution</span>
                {%-endif-%}
            <pre class='highlight {{data.ce_status}}'>{{example(data.entries) -}}

             {{- data.out}}</pre>
            {% else %}
                {{render_II(data)}}
            {% endif %}
            
         {% endfor %}
         See :
         {% for (ref, exists), r in doc.refs %}
            <a class='{{exists}}' href='{{ref}}{{ext}}'>{{r}}</a>,
         {% endfor %}
   {% elif section in ['Parameters', 'Returns', 'Raises', 'Yields', 'Attributes', 'Other Parameters', 'Warns'] and doc.content[section] == True %}

       <dl>
           {% for p in doc.content[section] %}
            {% if p[0] %}
                <dt><a id="{{p[0]}}">{{p[0]}}</a> : {{p[1]}}</dt>
            {% else %}
                <dt>{{p[1]}}</dt>
            {% endif %}
        </dl>

        <dd>
            {% for item in p[2] %}
                {{render_II(item)}}
            {% endfor %}
        </dd>
       {% endfor %}

   </pre>
   {% else %}
       {% if doc.content[section] == True %}
        <pre>
       {{doc.content[section]}}
       </pre>
       {% endif %}
   {% endif %}
{% endfor%}
{% if backrefs[0] or backrefs[1] %}
    <h1 id='section-backrefs'>Back References</h1>
    <p>The following pages refer to to this document either explicitly or contain code examples using this.</p>
    {% if backrefs[0] is not none %}
    {% for r in backrefs[0] %}
        <a class='exists' herf='{{r}}{{ext}}'>{{r}}</a>
    {% endfor %}
    {% endif%}
    {% if backrefs[1] is not none %}
        {% for k,v in backrefs[1].items() %}
         <h3>{{k}}</h3>
         {% if len(v) < 30 %}
         {% for r in v %}
            <a class='exists' href='{{r}}{{ext}}'>{{r}}</a>
         {% endfor %}
         {% else %}
        <details>
        <summary>{{v | length}} Elements</summary>
        {% for r in v %}
            <a class='exists' href='{{r}}{{ext}}'>{{r}}</a>
        {% endfor %}
        </details>
        {% endif %}
    {% endfor %}
    {% endif%}
{% endif %}

<hr>

To Be Done: </br>

File: {{doc.item_file}} </br>
Line: {{doc.item_line}} </br>
type: {{doc.item_type}} </br>
Commit: </br>
Tag: </br>
Link to the right github gitalab repository, file and line (maybe range?)</br>
</div>
{% endblock %}
