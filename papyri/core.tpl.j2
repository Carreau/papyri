<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://fonts.xz.style/serve/inter.css">
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">
    
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css">
    <script type="text/x-mathjax-config">
        MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
    </script>
    <script type="text/javascript" async
        src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML">
    </script>
<style>
body{
    font-family: 'Roboto', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;
    color: #606c76;
    font-weight: 350;
    line-height: 1.6;

}
          .foo:hover{text-decoration:underline}
          .foo{font-weight:bold; color:#4e4e4e}
          .exists{font-weight:bold; color:#4e4e4e;text-decoration:none;}
          .local{font-weight:bold; color:#1e6f04;text-decoration:none;}
          .exists:hover{text-decoration:underline;color:black}
          .missing,.missing:hover{color:darkred;text-decoration:none;font-weight:normal}
          .signature {font-size:100%; margin-bottom: 2rem; display: block; border:none; background-color: #FFFFFF;
              font-weight:600;}
          h1, h2, h3 {color: #4e4e4e; font-weight:400;
          margin-bottom: 1rem;}
          pre{border-radius:0;
              padding:0.6rem;
          border-left: 3px solid #0070f3}
          dt {font-weight: 400;}

          header{padding-top:0rem; padding-bottom:0rem;}
          dd::before {
            content: '';
          }
          header > brand, header>:first-child {
              border-right: 1px solid #ccc;
              border-left: 1px solid #ccc;
              padding: 1rem;
              padding-top: 0.5rem;
              padding-bottom: 0.5rem;
              display: inline-block; 

          }
          brand > i {
              padding-right: 0.5rem;

        }
          nav{display:inline;
          padding-left: 1rem;
          }

          dd {
              margin-left: 1rem;
              border-left:  solid #ddd;
              padding-left: 1rem;
          }
          summary > h2 { display: inline }
    </style>
</head>
<body>

    <header>
        
        
        <brand><i class="fab fa-python"></i>PaPyRi</brand>
        <nav> / pydata / {{module}} / {{version}} / api / {{qa}} </nav>
</header>

{% macro example(entries) -%}
    {{'>>> ' -}}
    {%- for text, t_ in entries %}
       {%- if text == '\n' -%}
           <br>...&nbsp;
       {%- else -%}
            {%- if t_ -%}
            <a class="foo" title={{t_}}, href="{{t_}}{{ext}}">{{text}}</a>
            {%- else -%}
            {{text}}
            {%- endif -%}
       {%- endif -%}
    {%- endfor-%}
    {{-'\n'}}
    {%- endmacro %}

{% macro render_paragraph(lines) -%}
{% for prg in paragraphs(lines) %}
        <p>
        {% for type,obj in prg -%}
            {%- if type == 'Word' -%}
                {{-obj.value-}}
            {%- elif type == 'Directive' -%}
                {% set ref, exists = resolve(obj.text) %}
                {% if exists=='local' %}
                    <code><a href="#{{ref}}" class='{{exists}}'>{{obj.text}}</a></code>
                {% else %}
                    <code><a href="{{ref}}{{ext}}" class='{{exists}}'>{{obj.text}}</a></code>
                {% endif %}
            {% elif type == 'Math' %}
                ${{obj.text}}$
            {% elif type == 'Verbatim' %}
                <code>{{obj.text}}</code>
            {% else %}
                <code>Some {{type}}</code>
            {%- endif -%}
        {%- endfor %}
        </p>
    {%- endfor %}
{%- endmacro %}


{% macro ref(r) -%}
    {% if r.exists %}
                <a href="{{r.ref}}{{ext}}" class='exists'>{{r.name}}</a>
    {% else %}
                <b class='missing'>{{r.name}}</b>
    {% endif %}
{%- endmacro %}


{% for section in doc.sections if doc[section] %}
    {% if section not in ['Extended Summary','Signature', 'Summary'] %}
        <h3>{{section}}</h3>
    {% endif %}
    {% if section in ['Summary', 'Extended Summary', 'Notes'] %}
        {{render_paragraph(doc[section])}}
    {% elif section in ['Signature'] %}
       <code class='signature'>{{doc[section]}}</code>
    {% elif section in ['See Also'] %}
        {% for sa in doc.see_also %}
            <dl>
                <dt>{{ref(sa.name)}}</a>
                </dt>
            <dd>{{render_paragraph(sa.descriptions)}}</dd>
            </dl>
        {% endfor %}

    {% elif section in ['Examples'] %}
        {% for type,data in doc.edata %}
            {% if type=='text' %}
             {{render_paragraph([data])}}
            {% else %}
             <pre>{{example(data[0]) -}}

             {{- data[1]}}</pre>
            {% endif %}
            
         {% endfor %}
         See :
         {% for r in doc.refs %}
            {% set ref, exists = resolve(r) %}
            <a class='{{exists}}' href='{{ref}}{{ext}}'>{{r}}</a>,
         {% endfor %}
   {% elif section in ['Parameters', 'Returns', 'Raises', 'Yields', 'Attributes'] %}

       <dl>
           {% for p in doc[section] %}
            {% if p[0] %}
                <dt><a id={{p[0]}}>{{p[0]}}</a> : {{p[1]}}</dt>
            {% else %}
                <dt>{{p[1]}}</dt>
            {% endif %}
           <dd>
           {{render_paragraph(p[2])}}
            </dd>
       {% endfor %}

   </pre>
   {% else %}
       {% if doc[section] %}
        <pre>
       {{doc[section]}}
       </pre>
       {% endif %}
   {% endif %}
{% endfor%}
{% if backrefs[0] or backrefs[1] %}
    <h1>Back References</h1>
    {% if backrefs[0] is not none %}
    {% for r in backrefs[0] %}
        <a class='{{exists(r)}}' href='{{r}}{{ext}}'>{{r}}</a>
    {% endfor %}
    {% endif%}
    {% if backrefs[1] is not none %}
        {% for k,v in backrefs[1].items() %}
         <h2>{{k}}</h2>
         {% if len(v) < 30 %}
         {% for r in v %}
            <a class='exists' href='{{r}}{{ext}}'>{{r}}</a>
         {% endfor %}
         {% else %}
        <details>
        <summary>{{v | length}} Elements</summary>
        {% for r in v %}
            <a class='exists' href='{{r}}{{ext}}'>{{r}}</a>
        {% endfor %}
        </details>
        {% endif %}
    {% endfor %}
    {% endif%}
{% endif %}
</body>
</html>
