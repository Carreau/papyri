{%- extends "skeleton.tpl.j2" %}

{%block api %}


{% from 'macros.tpl.j2' import render_paragraph, myst_directive, example, render_myst, render_II with context %}
{% from 'graph.tpl.j2' import d3script with context%}




{% macro ref(r) -%}
    {% if r.exists %}
                <a href="{{r.ref}}{{dothtml}}" class='exists'>{{r.name}}</a>
    {% else %}
                <b class='missing'>{{r.name}}</b>
    {% endif %}
{%- endmacro -%}



{% if doc.signature -%}
    {{ render_myst(doc.signature) }}
    <code class='signature'>{{name}}{{doc.signature.to_signature()}}</code>
{%- endif -%}

{%- for section in doc.content.keys() if doc.content[section] -%}
  {%- set root = doc.content[section] -%}
  
   {{ render_II(root) }}
 
{% endfor%}
{% if doc.see_also -%}
   {{render_myst(doc.see_also)}}
{% endif -%}

{% for s in doc.arbitrary -%}
  {{render_II(s)}}
{% endfor -%}
{% if doc.example_section_data -%}
    <h3 id="section-Examples">Examples</h3>
        {% for data in doc.example_section_data -%}
            {%- set type = data.__class__.__name__ -%}
            {% if type=='Text' %}
                {{render_paragraph(data)}}
            {% elif type == 'Fig' %}
                <div><img src="/p/{{data.value.module}}/{{data.value.version}}/img/{{data.value.path}}"/></div>
            {% elif type[0] == 'M' %}
                {{ render_myst(data) }}
            {% elif type == 'Code2' %}
                {% if data.ce_status == 'syntax_error' -%}
                    <span class='warning'>This example does not not appear to be valid Python Syntax</span>
                {%-elif data.ce_status == 'exception_in_exec' -%}
                    <span class='error'>This example is valid syntax, but raise an exception at execution</span>
                {%-elif data.ce_status == 'compiled' -%}
                    <span class='note'>This example is valid syntax, but we were not able to check execution</span>
                {%-endif-%}
            <pre class='highlight {{data.ce_status}}'>{{example(data.entries) -}}
             {{- data.out -}}
            </pre>
            {% else %}
                {{render_II(data)}}
            {% endif %}
            
         {% endfor %}
         See :
     {% endif %}
    

{% if backrefs[0] or backrefs[1] %}
    <h3 id='section-backrefs'>Back References</h3>
    <p>The following pages refer to to this document either explicitly or contain code examples using this.</p>


    {% if backrefs[1] is not none %}
        {% for k,v in backrefs[1].items() %}
        <h4>{{k}}</h4>
        <details>
            <summary>{{v | length}} Elements</summary>
            <dl>
            {% for r in v %}
                <dd>{{ render_II(r) -}}</dd>
            {% endfor %}
            </dl>
        </details>
    {% endfor %}
    {% endif%}
{% endif %}

{% if graph %}
<h3>Local connectivity graph</h3>
<p>Hover to see nodes names; edges to Self not shown, Caped at 50 nodes.</p>

<p> Using a canvas is more power efficient and can get hundred of nodes ; but does not allow hyperlinks; , arrows
or text (beyond on hover) </p> 
<canvas class='graph' width="800" height="500"></canvas>
<p> SVG is more flexible but power hungry; and does not scale well to 50 + nodes. </p> 

<svg class='graph' width="600" height="500"></svg>

<p>All aboves nodes referred to, (or are referred from) current nodes; Edges from Self to other have been omitted
(or all nodes would be connected to the central node "self" which is not useful). Nodes are colored by the library
they belong to, and scaled with the number of references pointing them</p>
{% endif %}

<hr>

{%if meta.get('github_slug')%}
    GitHub : <a class='external' href='https://github.com/{{meta.github_slug}}/blob/{{meta.tag}}/{{doc.item_file}}#L{{doc.item_line}}'>{{doc.item_file}}#{{doc.item_line}}</a>
{% else %}
    File: {{doc.item_file}}#{{doc.item_line}}
{%endif%}<br/>

type: {{doc.item_type}} <br/>
Commit: <br/>

{% if graph is defined %}
    {{d3script(graph)}}
{% endif %}
{% endblock %}


