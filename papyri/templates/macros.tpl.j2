{% macro render_inner(type_, obj) -%}
    {%- if type_ == 'Directive' -%}
         <!-- In theory we should never get Raw directive in final output --!>
         {{ render_myst(obj) }}
    {%- elif type_ in ('Math', 'Verbatim', 'MText','MEmphasis','MInlineCode', 'MLink') -%}
        {{ render_myst(obj) }}
    {%- elif type_ in ['SubstitutionRef','Unimplemented'] %}
        {{unimplemented(type_, obj.__class__.__name__, obj.__dict__)}}
        <pre class='not-implemented'>{{obj}}</pre>
    {%- else %}
        {{unreachable(type_, obj.__class__.__name__, obj.__dict__)}}
    {%- endif -%}
{%- endmacro %}

{% macro block_paragraph(prg) -%}
    {{unreachable(prg)}}
    <p>
        {%- for obj in prg.children -%}
            {{- render_inner(obj.__class__.__name__, obj) -}}
        {%- endfor -%}
    </p>
{% endmacro %}


{% macro render_paragraph(prgs) -%}
    {% for prg in prgs %}
        {{ render_myst(prg) }}
    {%- endfor %}
{%- endmacro %}

{% macro render_myst(obj) -%}
    {% set astJson = obj.to_dict() %}
    {% set key = uuid() %}
    <div id="{{ key }}"></div>
    <script>
      render("{{ key }}", {"type": "root", "children":[{{ astJson|tojson(indent=2) }}]})
    </script>
{%- endmacro %}



{% macro myst_directive(dve) -%}
    <pre class='not-implemented'>
.. {{dve.name}}:: {{dve.args}}
    {% for opt in dve.options %}
    {{ opt }}
    {% endfor %}
    {{dve.value|indent -}}
    </pre>
{% endmacro %}

{% macro block_admonition(adm) -%}
<div class='admonition'>
    <div>{{adm.kind}} {{adm.title}}</div>
    {% for it in adm.children %}
        {{render_II(it)}}
    {% endfor %}
</div>
{% endmacro %}


{% macro render_II(obj) -%}

    {%- set type = obj.__class__.__name__ -%}
       {%- if type in ('Directive', 'Math', 'Verbatim') -%}
           {# {{unreachable(obj)}} #}
           {{obj.value}}  {# TODO : likely smth wrong with field list #}
       {% elif type[0] == 'M' %}
            {{ render_myst(obj) }}
       {%- elif type == 'Link' -%}

           {# Links have : value, reference, kind exists#}
           {%- if obj.reference.kind=='local' -%}
               <code><a href="#{{obj.reference.path}}" class='{{obj.kind}}'>{{obj.value}}</a></code>
           {%- elif obj.kind in ('api', 'exists', 'module', 'assets') -%}
               <code><a href="{{url(obj.reference)}}" class='exists'>{{obj.value}}</a></code>
           {% else %}
               {{unreachable(type_, obj.__class__.__name__, obj.__dict__)}}
           {%- endif -%}
       {%- elif type == 'MMystDirective' -%}
           {{myst_directive(obj)}}
       {% elif type == 'Admonition' %}
            {{block_admonition(obj)}}
       {%- elif type == 'BlockVerbatim' -%}
            <pre>
           {{- obj.value -}}
           </pre>
       {%- elif type == 'DefList' -%}
          <!-- deflist -->
           <dl>
               {% for item in obj.children %}
               <dt>{{render_II(item.dt)}}</dt>
               <dd>{%- for it in item.dd -%}
                       {{-render_II(it)-}}
                  {%- endfor -%}
               </dd>
               {%endfor %}
           </dl>
       {% elif type == 'Section' %}
           {% for item in obj %}
               {{ render_II(item) }}
           {% endfor %}
        {% elif type == 'List' %}
            {% if obj.ordered %}
            <ol>
               {%- for item in obj.children %}
               <li>{{render_II(item)}}</li>
               {% endfor %}
            </ol>
            {% else %}
            <ul>
               {%- for item in obj.children %}
               <li>{{render_II(item)}}</li>
               {% endfor %}
            </ul>
            {% endif %}
       {% elif type == 'ListItem' %}
               {%- for item in obj.children %}
               {{render_II(item)}}
               {% endfor %}
       {% elif type == 'FieldList' %}
           <dl> 
             {%- for item in obj.children %}
               <dt>
                {%- for x in item.name %}
                {{render_II(x)}}
                {% endfor %}
               </dt>
               <dd>
                {%- for x in item.body %}
                {{render_II(x)}}
                {% endfor %}
               </dd>
               {% endfor %}
           </dl>

       {% elif type == 'FieldListItem' %}
           <ol>
               {%- for item in obj.children %}
               <li>{{render_II(item)}}</li>
               {% endfor %}
           </ol>

       {% elif type == 'BlockMath' %}
        <span class="tex2jax_process">$${{obj.value}}$$</span>
       {% elif type == 'Transition' %}
         <hr/>

       {% elif type == 'TocTree' %}
        {%if obj.children%}
            <details class='toctree' open>
            <summary><a class="toctree" href="{{url(obj.ref)}}">{{obj.title}}</a></summary>
              <ul>
               {% for c in obj.children %}
                   <li>{{render_II(c)}}</li>
               {% endfor %}
              </ul>
            </details>
        {% else %}
            <a class="toctree" href="{{url(obj.ref)}}">{{obj.title}}</a>
        {%endif%}
         
       {% elif type == 'BlockQuote' %}
            <blockquote>
               {%- for child in obj.children %}{{render_II(child)}}{% endfor -%}
            </blockquote>
       {% elif type in ['Options','Unimplemented','Comment','SubstitutionRef'] %}
           <pre class='not-implemented'>
            {{obj}}
           </pre>
       {% else %}
           <code class='not-implemented'>Type {{type}} (A) Not implemented yet</code>
           <pre class='not-implemented'>
           {{-unimplemented(type, obj)-}}
           </pre>
       {%- endif -%}
{%- endmacro %}



{%- macro example(entries) -%}
<span class='nsl'>{{'>>> ' -}}</span>{{ '' -}}
{%- for token in entries -%}
        {%- if token.link.__class__.__name__ == 'Link' -%}
            <a class="foo {{token.type}}" href="{{url(token.link.reference)}}">{{token.link.value}}</a>
        {%- else -%}
            {%- if token.link == '\n' -%}
                <br><span class='nsl'>...&nbsp;</span>
            {%- else -%}
                <span class="{{token.type}}">{{token.link}}</span>
            {%- endif -%}
        {%- endif -%}
    {%- endfor-%}
    {{-'\n'}}
{%- endmacro %}






